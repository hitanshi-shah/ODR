pipeline{
     agent {
       docker {
             image 'harimaumalaya:v0.0.1j'
             label 'docker'
             registryUrl 'https://046099537821.dkr.ecr.us-east-1.amazonaws.com'
	         args '-u root'
	         reuseNode true

       }
   }
    parameters {
    
         string(name: 'app_location_version', defaultValue: '', description: 'Location and version of the application')
         string(name: 'application', defaultValue: '', description: 'Name of the application')
         string(name: 'version_command', defaultValue: '', description: 'Command to check the version of the application')
         string(name: 'uninstall_command', defaultValue: '', description: 'Command to uninstall the application')
         string(name: 'check_path_command', defaultValue: '', description: 'Command to check the path of the application')
         string(name: 'server_ip', defaultValue: '', description: 'Server IP for Ansible')
	 string(name: 'ansible_user', defaultValue: '', description: 'Enter your user_name')
	 password(name: 'ansible_password', defaultValue: '', description: 'Enter your user_pass')
	 password(name: 'ansible_become_password', defaultValue: '', description: 'Enter your user_become')
	 password(name: 'GIT_TOKEN', defaultValue: '', description: 'Enter your GIT_TOKEN')
	 string(name: 'region', defaultValue: '', description: 'Enter region of the server')
	 string(name: 'os_version', defaultValue: '', description: 'Enter os_version of the server')
	 string(name: 'qualys_id', defaultValue: '', description: 'Enter qualys_id of the server')
	 string(name: 'type',  defaultValue: '', description: 'Enter type of the remediation')
	 string(name: 'platform',  defaultValue: '', description: 'Enter platform of the remediation')
	
	}

   stages {
      stage('Install Ansible'){
          steps{
		        script{  
                  sh """
		                apt-get update
                    apt-get install -y ansible
                    pip install boto3
                    ls -ltr /usr/bin/*
                    ansible --version
                    which pip
                    which python
                    python3 -m pip install boto3
		                pwd
	                  ls -ltr
                    """
            }
	    }
     }
     stage('Register server to the satellite') { 
            steps {
                script {  
		  
                          sh '''
			  
                          ansible-playbook -i ${server_ip}, Rhsat_satellite.yml \
			  -e "server_ip=\\"${server_ip}\\""\
	       -e "ansible_user=\\"${ansible_user}\\""\
           -e "ansible_password=\\"${ansible_password}\\""\
           -e "ansible_become_password=\\"${ansible_password}\\""\
	   -e "region=\\"${region}\\"" \
	   -e "os_version=\\"${os_version}\\""
	   ls -lart 
	   cat Subscriptionpassed_hosts
                          '''
                        }
	           }		
             }
      stage('To update new version of linux application') { 
            steps {
                script {              
                          sh '''
                          ansible-playbook -i Subscriptionpassed_hosts UninstallLinuxApp.yml \
                         -e "app_location_version=\\"${app_location_version}\\"" \
                         -e "application=\\"${application}\\"" \
			 -e "version_command=\\"${version_command}\\"" \
                         -e "uninstall_command=\\"${uninstall_command}\\"" \
                         -e "check_path_command=\\"${check_path_command}\\""\
			 -e "ansible_user=\\"${ansible_user}\\""\
                         -e "ansible_password=\\"${ansible_password}\\""\
                         -e "ansible_become_password=\\"${ansible_password}\\""
			 ls -lart
                          '''
                        }
             }
       }
      stage('Report generation') {
            steps { 
              sh 'ansible-playbook -i ${server_ip},   reportlatest.yml \
	       -e "server_ip=\\"${server_ip}\\""\
               -e "ansible_user=\\"${ansible_user}\\""\
               -e "ansible_password=\\"${ansible_password}\\""\
               -e "ansible_become_password=\\"${ansible_password}\\""\
	       -e "qualys_id=\\"${qualys_id}\\""\
	       -e "type=\\"${type}\\""\
	       -e "platform=\\"${platform}\\""'
	       
	       sh 'ls -lart /tmp'
	       sh 'cp -p /tmp/${server_ip}.html .'
	       sh 'ansible-playbook -i ${server_ip},  remotestore.yml \
		-e "ansible_user=\\"${ansible_user}\\""\
               -e "ansible_password=\\"${ansible_password}\\""\
               -e "ansible_become_password=\\"${ansible_password}\\""\
               -e "GIT_TOKEN=\\"${GIT_TOKEN}\\""'
            }
                    
        } 
   }
}      
